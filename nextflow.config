manifest {

    author          = "Eachan Johnson"
    homePage        = "https://github.com/scbirlab/nf-ont-call-variants"
    description     = "Assemble and call variants from Nanopore FASTQ files."
    defaultBranch   = "v0.0.2"
    nextflowVersion = '!>=22.10.1'
    version         = "0.0.2"
    doi             = ''

}

params {

    /* Required */
    sample_sheet = null

    /* Optional */
    gatk_image = "broadinstitute/gatk:latest"
    snpeff_url = "https://snpeff.blob.core.windows.net/versions/snpEff_latest_core.zip"
    clair3_image = "hkubal/clair3:latest"
    rerio_url = "https://github.com/nanoporetech/rerio.git"
    clair3_model = "r1041_e82_400bps_sup_v500"
    inputs = "inputs"
    outputs = "outputs"
    trim_qual = 10
    min_length = 10

}

process {
  container = 'ghcr.io/scbirlab/nf-ont-call-variants:latest'
  containerEngine = 'auto'  // docker, singularity, or podman
  conda = "${projectDir}/environment.yml"
}

conda {
  createTimeout = '4 h'
  cacheDir = "${projectDir}/.conda"
}

singularity {
  autoMounts = true
  cacheDir = "${projectDir}/.singularity"
}

docker {
  cacheDir = "${projectDir}/.docker"
  temp = true  // run in isolated container mount
}

profiles {

  standard {

    singularity.enabled = true

    process {
      executor = 'slurm'

      withLabel: big_cpu {
        cpus = 16
        memory = 64.GB
      }

      withLabel: some_mem {
        memory = 8.GB
      }

      withLabel: med_mem {
        memory = 32.GB
      }

    }

    dag {
      enabled = true
      overwrite = true
    }

    notification {
      enabled = true
      to = "$USER@crick.ac.uk"
    }

  }

  local {

    conda.useMamba = false

    process {
      executor = 'local'

      withLabel: big_cpu {
        cpus = 8
        memory = 12.GB
      }

      withLabel: some_mem {
        memory = 12.GB
      }

      withLabel: med_mem {
        memory = 12.GB
      }

    }

  }

  gh {

    docker.enabled = true
    docker.runOptions = '-u 1001:1001'

    process {
      executor = 'local'

      withLabel: big_cpu {
        cpus = 1
        memory = 12.GB
      }

      withLabel: some_mem {
        memory = 12.GB
      }

      withLabel: med_mem {
        memory = 12.GB
      }

    }

  }

}